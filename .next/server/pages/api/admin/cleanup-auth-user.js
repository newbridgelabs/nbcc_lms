"use strict";(()=>{var e={};e.id=977,e.ids=[977],e.modules={2885:e=>{e.exports=require("@supabase/supabase-js")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,s)=>{Object.defineProperty(s,"l",{enumerable:!0,get:function(){return function e(s,r){return r in s?s[r]:"then"in s&&"function"==typeof s.then?s.then(s=>e(s,r)):"function"==typeof s&&"default"===r?s:void 0}}})},4251:(e,s,r)=>{r.r(s),r.d(s,{config:()=>d,default:()=>i,routeModule:()=>c});var t={};r.r(t),r.d(t,{default:()=>l});var o=r(1802),a=r(7153),u=r(6249),n=r(2885);async function l(e,s){if("POST"!==e.method)return s.status(405).json({error:"Method not allowed"});try{let{email:r}=e.body;if(!r)return s.status(400).json({error:"Email is required"});console.log("=== AUTH USER CLEANUP ==="),console.log("Target email:",r);let t="https://qyhdzjzvkggcsuhnenaz.supabase.co",o=process.env.SUPABASE_SERVICE_ROLE_KEY;if(!t||!o)return s.status(500).json({error:"Supabase configuration missing. Service role key required for auth user deletion."});let a=(0,n.createClient)(t,o,{auth:{autoRefreshToken:!1,persistSession:!1}});console.log("Searching for user in auth.users...");let{data:u,error:l}=await a.auth.admin.listUsers();if(l)return console.error("Error listing users:",l),s.status(500).json({error:`Failed to list users: ${l.message}`});let i=u.users.find(e=>e.email?.toLowerCase()===r.toLowerCase());if(!i)return console.log("User not found in auth.users"),s.status(200).json({success:!0,message:"User not found in auth.users (already clean)",userFound:!1});console.log("User found in auth.users:",{id:i.id,email:i.email,created_at:i.created_at,email_confirmed_at:i.email_confirmed_at}),console.log("Deleting user from auth.users...");let{error:d}=await a.auth.admin.deleteUser(i.id);if(d)return console.error("Error deleting user:",d),s.status(500).json({error:`Failed to delete user: ${d.message}`});console.log("✅ User successfully deleted from auth.users");let c=(0,n.createClient)(t,o),{error:f}=await c.from("users").delete().eq("email",r.toLowerCase());f&&"PGRST116"!==f.code?console.warn("Could not delete from custom users table:",f.message):console.log("✅ Cleaned up custom users table");let{error:m}=await c.from("allowed_users").update({is_used:!1,reset_at:new Date().toISOString(),reset_reason:"Auth user cleanup"}).eq("email",r.toLowerCase());return m?console.warn("Could not reset allowed_users:",m.message):console.log("✅ Reset allowed_users status"),s.status(200).json({success:!0,message:"User successfully cleaned up from all systems",userFound:!0,deletedUserId:i.id,actions:["Deleted from auth.users","Cleaned up custom users table","Reset allowed_users status"]})}catch(e){return console.error("Cleanup error:",e),s.status(500).json({error:`Cleanup failed: ${e.message}`})}}let i=(0,u.l)(t,"default"),d=(0,u.l)(t,"config"),c=new o.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/admin/cleanup-auth-user",pathname:"/api/admin/cleanup-auth-user",bundlePath:"",filename:""},userland:t})},7153:(e,s)=>{var r;Object.defineProperty(s,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},1802:(e,s,r)=>{e.exports=r(145)}};var s=require("../../../webpack-api-runtime.js");s.C(e);var r=s(s.s=4251);module.exports=r})();